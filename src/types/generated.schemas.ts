/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * Employ Me Api
 * OpenAPI spec version: 1.0
 */
export interface SkillListOutputDto {
  /** Skill List */
  skillList: string[];
}

export interface ApplyToJobDto {
  applicantId: string;
}

export interface SalaryDto {
  currency: string;
  from: number;
  period: string;
  to: number;
}

export interface LocationDto {
  city: string;
  country: string;
  province: string;
}

export interface RegisterJobInputDto {
  applicants: string[];
  createdAt: string;
  description: string;
  location: LocationDto;
  locationType: string;
  recent: boolean;
  salary: SalaryDto;
  tags: string[];
  title: string;
}

export interface JobDto {
  applicants: string[];
  createdAt: string;
  description: string;
  id: string;
  location: LocationDto;
  locationType: string;
  recent: boolean;
  salary: SalaryDto;
  tags: string[];
  title: string;
}

/**
 * Access Count
 */
export type UpdateUserInputDtoAccessCount = { [key: string]: any };

export interface UpdateUserInputDto {
  /** Access Count */
  accessCount?: UpdateUserInputDtoAccessCount;
  /** Culture User Info */
  culture?: UserCultureDto;
  /** Education User Info */
  education?: UserEducationDto[];
  /** General User Info */
  general?: UserGeneralDto;
  /** Jobs Applied */
  jobsApplied?: string[];
  /** Name */
  name?: string;
  /** User Profile Picture */
  picture?: ProfilePictureDto;
  /** Preferences User Info */
  preferences?: UserPreferencesDto;
  /** Professional User Info */
  professional?: UserProfessionalDto;
  /** Relocation User Info */
  relocation?: UserRelocationDto;
  /** Social Media User Info */
  social?: UserSocialDto[];
  /** Username */
  username?: string;
}

export interface RegisterUserInputDto {
  /** Email */
  email: string;
  /** Name */
  name: string;
  /** Password */
  password: string;
  /** UserType */
  userType?: UserType;
}

export interface SignUpDto {
  /** Email */
  email: string;
  /** Name */
  name: string;
  /** Password */
  password: string;
}

export interface TokenOutputDto {
  /** Access Token */
  accessToken: string;
  /** Refresh Token */
  refreshToken: string;
}

export interface UserWithTokensOutputDto {
  /** Tokens to login */
  tokens: TokenOutputDto;
  /** User's info */
  userData: UserOutputDto;
}

/**
 * Access Count
 */
export type UserOutputDtoAccessCount = { [key: string]: any };

export interface UserEducationDto {
  degree: string;
  description: string;
  endDate: string;
  fieldOfStudy: string;
  school: string;
  startDate: string;
}

export type SocialMedia = typeof SocialMedia[keyof typeof SocialMedia];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SocialMedia = {
  Facebook: 'Facebook',
  Twitter: 'Twitter',
  Linkedin: 'Linkedin',
  Github: 'Github',
  Instagram: 'Instagram',
  Tiktok: 'Tiktok',
} as const;

export interface UserSocialDto {
  name: SocialMedia;
  url: string;
}

export interface UserOutputDto {
  /** Access Count */
  accessCount: UserOutputDtoAccessCount;
  /** Culture User Info */
  culture: UserCultureDto;
  /** Education User Info */
  education: UserEducationDto[];
  /** Email */
  email: string;
  /** General User Info */
  general: UserGeneralDto;
  /** ID */
  id: string;
  /** Jobs Applied */
  jobsApplied: string[];
  /** Name */
  name: string;
  /** User Profile Picture */
  picture: ProfilePictureDto;
  /** Preferences User Info */
  preferences: UserPreferencesDto;
  /** Professional User Info */
  professional: UserProfessionalDto;
  /** Relocation User Info */
  relocation: UserRelocationDto;
  /** Social Media User Info */
  social: UserSocialDto[];
  /** Username */
  username: string;
  /** UserType */
  userType?: UserType;
}

export type WorkEnvironmentType = typeof WorkEnvironmentType[keyof typeof WorkEnvironmentType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const WorkEnvironmentType = {
  Clear_role_and_set_of_responsibilities_Consistent_feedback_from_management: 'Clear role and set of responsibilities. Consistent feedback from management',
  Employees_wear_a_lot_of_hats_Assignment_often_require_employees_to_figure_it_out_on_their_own: 'Employees wear a lot of hats. Assignment often require employees to figure it out on their own',
} as const;

export type FiveYearsTrack = typeof FiveYearsTrack[keyof typeof FiveYearsTrack];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FiveYearsTrack = {
  Individual_Contributor: 'Individual Contributor',
  Manager: 'Manager',
} as const;

export type MotivationType = typeof MotivationType[keyof typeof MotivationType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MotivationType = {
  Solving_Technical_problems: 'Solving Technical problems',
  Building_something_from_scratch: 'Building something from scratch',
} as const;

export interface UserCultureDto {
  fiveYearsCareerTrack: FiveYearsTrack;
  lookingFor: string;
  motivatesMeMore: MotivationType;
  workBetterIn: WorkEnvironmentType;
}

export type UserPreferencesDtoSalary = { [key: string]: any };

export type JobSearchStatus = typeof JobSearchStatus[keyof typeof JobSearchStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const JobSearchStatus = {
  ACTIVE: 'ACTIVE',
  OPEN: 'OPEN',
  CLOSED: 'CLOSED',
} as const;

export type CompanySize = typeof CompanySize[keyof typeof CompanySize];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CompanySize = {
  Seed: 'Seed',
  Early: 'Early',
  Mid_size: 'Mid size',
  Large: 'Large',
  Very_Large: 'Very Large',
  Massive: 'Massive',
} as const;

export interface UserPreferencesDto {
  companySize: CompanySize;
  hideFromCompanies: string[];
  jobSearchStatus: JobSearchStatus;
  salary: UserPreferencesDtoSalary;
}

export type CurrencyType = typeof CurrencyType[keyof typeof CurrencyType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CurrencyType = {
  USD: 'USD',
  EUR: 'EUR',
  GBP: 'GBP',
  JPY: 'JPY',
  AUD: 'AUD',
  CAD: 'CAD',
  BRL: 'BRL',
} as const;

export interface UserRelocationDto {
  activelyLooking: boolean;
  companySize: CompanySize;
  currency: CurrencyType;
  noticePeriod: string;
  openToRemote: string;
  relocateOptions: string;
  salaryExpected: string;
  validPassport: boolean;
  visa: string;
}

export type LocationType = typeof LocationType[keyof typeof LocationType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LocationType = {
  Hybrid: 'Hybrid',
  Remote: 'Remote',
  Onsite: 'Onsite',
} as const;

export interface UserWorkExperienceDto {
  company: string;
  current: boolean;
  description: string;
  endDate: string;
  id: string;
  location: string;
  locationType: LocationType;
  startDate: string;
  title: string;
}

export interface UserProfessionalDto {
  openToDiffRole: boolean;
  preferencesToWork: ProfessionType[];
  profession: ProfessionType;
  skillsRank: UserSkillRankDto[];
  /** Work Experiences */
  workExperience: UserWorkExperienceDto[];
  yearsOfExperience: number;
}

export type TechAndLanguagesAndTools = typeof TechAndLanguagesAndTools[keyof typeof TechAndLanguagesAndTools];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TechAndLanguagesAndTools = {
  javascript: 'javascript',
  html: 'html',
  sql: 'sql',
  java: 'java',
  css: 'css',
  python: 'python',
  git: 'git',
  reactjs: 'react.js',
  nodejs: 'node.js',
  'c#': 'c#',
  ruby: 'ruby',
  angular: 'angular',
  webpack: 'webpack',
  GoLang: 'GoLang',
} as const;

export interface UserSkillRankDto {
  skill: TechAndLanguagesAndTools;
  yearsOfExp: number;
}

export type ProfessionType = typeof ProfessionType[keyof typeof ProfessionType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProfessionType = {
  Backend_Engineer: 'Backend Engineer',
  Frontend_Engineer: 'Frontend Engineer',
  Full_Stack_Engineer: 'Full Stack Engineer',
  Web_Developer: 'Web Developer',
  Game_Developer: 'Game Developer',
  Mobile_Developer: 'Mobile Developer',
  'UI/UX_Designer': 'UI/UX Designer',
  DevOps_Engineer: 'DevOps Engineer',
  Site_Reliability_Engineer: 'Site Reliability Engineer',
  Security_Engineer: 'Security Engineer',
  QA_Engineer: 'QA Engineer',
  Data_Analyst: 'Data Analyst',
  Data_Scientist: 'Data Scientist',
  Data_Engineer: 'Data Engineer',
  Machine_Learning_Engineer: 'Machine Learning Engineer',
  Blockchain_Engineer: 'Blockchain Engineer',
  Embedded_Engineer: 'Embedded Engineer',
  Mainframe_Engineer: 'Mainframe Engineer',
  Hardware_Engineer: 'Hardware Engineer',
  Middleware_Engineer: 'Middleware Engineer',
  Firmware_Engineer: 'Firmware Engineer',
  Systems_Administrator: 'Systems Administrator',
  Database_Administrator: 'Database Administrator',
  Network_Administrator: 'Network Administrator',
  Telecommunications_Engineer: 'Telecommunications Engineer',
  Salesforce_Developer: 'Salesforce Developer',
  Business_Analyst: 'Business Analyst',
  SAP_Consultant: 'SAP Consultant',
  Software_Architect: 'Software Architect',
  Scrum_Master: 'Scrum Master',
  Agile_Coach: 'Agile Coach',
  Product_Manager: 'Product Manager',
  Project_Manager: 'Project Manager',
  IT_Manager: 'IT Manager',
  IT_Director: 'IT Director',
  'Chief_Technology_Officer_(CTO)': 'Chief Technology Officer (CTO)',
  Other: 'Other',
  Solutions_Architect: 'Solutions Architect',
} as const;

export type GenderType = typeof GenderType[keyof typeof GenderType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GenderType = {
  Male: 'Male',
  Female: 'Female',
  Other: 'Other',
} as const;

export interface UserGeneralDto {
  bio: string;
  currentLocation: string;
  gender: GenderType;
}

export interface ProfilePictureDto {
  createdAt: string;
  data: string;
}

export type UserType = typeof UserType[keyof typeof UserType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserType = {
  Candidate: 'Candidate',
  Company: 'Company',
} as const;

export interface SignInDto {
  /** Email */
  email: string;
  /** Password */
  password: string;
}

